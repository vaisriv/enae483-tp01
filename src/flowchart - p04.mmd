---
config:
  look: neo
  layout: elk
---
classDiagram
  direction LR
    class PropellantMix {
        <<data container>>
        - name : string
        - displayname : string
        - oxidizer_mix_mass_ratio : double
        - fuel_mix_mass_ratio : double
        - specific_impulse : double
        - thrust_per_motor_stage1 : double
        - thrust_per_motor_stage2 : double
        - engine_exhaust_diameter_stage1 : double
        - engine_exhaust_diameter_stage2 : double
        - chamber_pressure_stage1 : double
        - chamber_pressure_stage2 : double
        - nozzle_expansion_ratio_stage1 : double
        - nozzle_expansion_ratio_stage2 : double
        - density_oxidizer : double
        - density_fuel : double
        - propellant_tank_mer_oxidizer : double
        - propellant_tank_mer_fuel : double
        - propellant_tank_insulation_mer_oxidizer : double
        - propellant_tank_insulation_mer_fuel : double
        - is_solid : logical
        %% + PropellantMix(...)  : constructor
    }
    class TwoStageLV {
        <<analysis>>
        %% - propellants : PropellantMix[1..2]
        %% - xs : double[1..100]
        %% - ms, m_ins, m_prs : double[2,100]
        %% - m_0s : double[1,100]
        %% - m_0_min, cost_0_min : double
        %% - i_m_min, i_c_min : double
        %% - mass_fig, cost_fig : figure handle
        %% - m_stage_subsystem_masses, c_stage_subsystem_masses : struct
        %% - m_estimated_*, c_estimated_* : rollup fields
        + TwoStageLV(propellants, deltaV, m_pl, delta, g) : constructor
        + run_part_01(deltaV, m_pl, delta, g)
        + run_part_02(m_pl, g)
        + generate_trends(deltaV, m_pl, delta, g)
        + calculate_stage_masses(x, deltaV, m_pl, delta, g)
        + calculate_stage_costs(m_in)
        + generate_mass_fig()
        + generate_cost_fig()
        + save_mass_fig()
        + save_cost_fig()
        + m_estimate_subsystem_masses(n, m_pl)
        + m_calculate_desired_engine_count(m_pl, g)
        + m_calculate_estimated_costs()
        + save_estimated_mass_table()
        + c_estimate_subsystem_masses(n, m_pl)
        + c_calculate_desired_engine_count(m_pl, g)
        + c_calculate_estimated_costs()
        + save_estimated_cost_table()
    }
    TwoStageLV "1" o-- "2" PropellantMix : uses / has
    class index {
        <<script>>
        + entrypoint
        + calls: setup, jack, matthew, huy, vai, jacob
    }
    class setup {
        <<script>>
        + defines: DeltaV_Total, m_pl, delta, g
        + constructs: propellants
        + (instances of PropellantMix)
    }
    class jack {
        <<script>>
        + instantiates multiple TwoStageLV
        + cases (s2 = lox_lch4)
    }
    class matthew {
        <<script>>
        + instantiates multiple TwoStageLV
        + cases (s2 = lox_lh2)
    }
    class huy {
        <<script>>
        + instantiates multiple TwoStageLV
        + cases (s2 = lox_rp1)
    }
    class vai {
        <<script>>
        + instantiates multiple TwoStageLV
        + cases (s2 = solid)
    }
    class jacob {
        <<script>>
        + instantiates multiple TwoStageLV
        + cases (s2 = storables)
    }
    index --> setup : calls
    setup --o PropellantMix : creates (propellant instances)
    jack ..> PropellantMix : reads
    jack ..> TwoStageLV : creates
    matthew ..> PropellantMix : reads
    matthew ..> TwoStageLV : creates
    huy ..> PropellantMix : reads
    huy ..> TwoStageLV : creates
    vai ..> PropellantMix : reads
    vai ..> TwoStageLV : creates
    jacob ..> PropellantMix : reads
    jacob ..> TwoStageLV : creates
    PropellantMix <.. TwoStageLV : constructor argument
    setup --> jack : invoked by index
    setup --> matthew : invoked by index
    setup --> huy : invoked by index
    setup --> vai : invoked by index
    setup --> jacob : invoked by index
